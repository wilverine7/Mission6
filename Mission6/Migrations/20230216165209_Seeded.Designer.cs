// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mission6.Models;

namespace Mission6.Migrations
{
    [DbContext(typeof(MovieCollectionContext))]
    [Migration("20230216165209_Seeded")]
    partial class Seeded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("Mission6.Models.ApplicationResponse", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DirectorFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DirectorLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LentTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("MovieTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieId");

                    b.ToTable("responses");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Category = "Action/Adventure",
                            DirectorFirstName = "Joss",
                            DirectorLastName = "Whedon",
                            Edited = false,
                            MovieTitle = "Avengers, The",
                            Rating = "PG-13",
                            Year = 2012
                        },
                        new
                        {
                            MovieId = 2,
                            Category = "Comedy",
                            DirectorFirstName = "Robert",
                            DirectorLastName = "Zemeckis",
                            Edited = false,
                            MovieTitle = "Back to the Future",
                            Rating = "PG",
                            Year = 1985
                        },
                        new
                        {
                            MovieId = 3,
                            Category = "Drama",
                            DirectorFirstName = "Richard",
                            DirectorLastName = "Curtis",
                            Edited = true,
                            MovieTitle = "About Time",
                            Rating = "R",
                            Year = 2013
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
